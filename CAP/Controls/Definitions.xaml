<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:local="clr-namespace:CAP"
	mc:Ignorable="d"
	x:Class="CAP.Controls.Definitions"
	d:DesignWidth="640" d:DesignHeight="480" Width="574" Height="503">

	<Grid x:Name="LayoutRoot">
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.25"/>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="Begin"/>
				<VisualState x:Name="Consistency">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Availability">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="PartitionTolerance">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock2" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="ConsistencyDemo">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock2" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_Copy" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="flowLine" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WriteData_Copy" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WriteData" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="flowLine1" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="AvailabilityDemo">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock2" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1_Copy" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="flowLine1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="flowLine2" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="PartitionToleranceDemo">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock2" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock2_Copy" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
        <i:Interaction.Triggers>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="Begin">
                <ei:GoToStateAction
                    StateName="Begin" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="Consistency">
                <ei:GoToStateAction
                    StateName="Consistency" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="Availability">
                <ei:GoToStateAction
                    StateName="Availability" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="PartitionTolerance">
                <ei:GoToStateAction
                    StateName="PartitionTolerance" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="ConsistencyDemo">
                <ei:GoToStateAction
                    StateName="ConsistencyDemo" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="AvailabilityDemo">
                <ei:GoToStateAction
                    StateName="AvailabilityDemo" />
            </ei:DataTrigger>
            <ei:DataTrigger
                Binding="{Binding CurrentState}"
                Value="PartitionToleranceDemo">
                <ei:GoToStateAction
                    StateName="PartitionToleranceDemo" />
            </ei:DataTrigger>
        </i:Interaction.Triggers>
        <VisualStateManager.CustomVisualStateManager>
			<ei:ExtendedVisualStateManager/>
		</VisualStateManager.CustomVisualStateManager>
		<TextBlock x:Name="textBlock_Copy" Height="46" Margin="153,65,133,0" TextWrapping="Wrap" Text="onsistency" VerticalAlignment="Top" Foreground="White" FontSize="32" Opacity="0">
			<TextBlock.Effect>
				<BlurEffect/>
			</TextBlock.Effect>
		</TextBlock>
		<TextBlock x:Name="textBlock1_Copy" Height="46" Margin="153,126,133,0" TextWrapping="Wrap" Text="vailability" VerticalAlignment="Top" Foreground="White" FontSize="32" Opacity="0">
			<TextBlock.Effect>
				<BlurEffect/>
			</TextBlock.Effect>
		</TextBlock>
		<TextBlock x:Name="textBlock2_Copy" Margin="153,187,104,0" TextWrapping="Wrap" Text="artition Tolerance" Foreground="White" FontSize="32" Height="46" VerticalAlignment="Top" Opacity="0">
			<TextBlock.Effect>
				<BlurEffect/>
			</TextBlock.Effect>
		</TextBlock>
		<TextBlock HorizontalAlignment="Left" Height="61" Margin="116,48,0,0" TextWrapping="Wrap" Text="C" VerticalAlignment="Top" Width="47" FontSize="48" Foreground="White"/>
		<TextBlock HorizontalAlignment="Left" Height="61" Margin="116,109,0,0" TextWrapping="Wrap" Text="A" VerticalAlignment="Top" Width="47" FontSize="48" Foreground="White"/>
		<TextBlock HorizontalAlignment="Left" Margin="116,170,0,0" TextWrapping="Wrap" Text="P" Width="47" FontSize="48" Foreground="White" Height="61" VerticalAlignment="Top"/>
		<TextBlock x:Name="textBlock" Height="46" Margin="153,65,133,0" TextWrapping="Wrap" Text="onsistency" VerticalAlignment="Top" Foreground="#FFB6B6B6" FontSize="32" Opacity="0"/>
		<TextBlock x:Name="textBlock1" Height="46" Margin="153,126,133,0" TextWrapping="Wrap" Text="vailability" VerticalAlignment="Top" Foreground="#FFB6B6B6" FontSize="32" Opacity="0"/>
		<TextBlock x:Name="textBlock2" Margin="153,187,104,0" TextWrapping="Wrap" Text="artition Tolerance" Foreground="#FFB6B6B6" FontSize="32" Height="46" VerticalAlignment="Top" Opacity="0"/>
		<Ellipse HorizontalAlignment="Left" Height="37" Margin="228,0,0,144" VerticalAlignment="Bottom" Width="37" StrokeThickness="3">
			<Ellipse.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Ellipse.Stroke>
			<Ellipse.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Ellipse.Fill>
		</Ellipse>
		<Ellipse HorizontalAlignment="Right" Height="37" Margin="0,0,165,144" VerticalAlignment="Bottom" Width="37" StrokeThickness="3">
			<Ellipse.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Ellipse.Stroke>
			<Ellipse.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Ellipse.Fill>
		</Ellipse>
		<Ellipse HorizontalAlignment="Left" Height="37" Margin="162,0,0,55" VerticalAlignment="Bottom" Width="37" StrokeThickness="3">
			<Ellipse.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Ellipse.Stroke>
			<Ellipse.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Ellipse.Fill>
		</Ellipse>
		<Ellipse HorizontalAlignment="Right" Height="37" Margin="0,0,231,55" VerticalAlignment="Bottom" Width="37" StrokeThickness="3">
			<Ellipse.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Ellipse.Stroke>
			<Ellipse.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Ellipse.Fill>
		</Ellipse>
		<Path Data="M269,339.75 L368,339.75" Height="3" Margin="268,0,204,161.25" Stretch="Fill" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Bottom">
			<Path.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Path.Fill>
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
		<Path Data="M269,339.75 L368,339.75" Height="3" Margin="203,0,269,72.5" Stretch="Fill" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Bottom">
			<Path.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Path.Fill>
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
		<Path Data="M234,356.75 L193.25,413.5" HorizontalAlignment="Left" Height="59.75" Margin="192.25,0,0,87.5" Stretch="Fill" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="43.75">
			<Path.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Path.Fill>
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
		<Path Data="M234,356.75 L193.25,413.5" HorizontalAlignment="Right" Height="59.75" Margin="0,0,193.5,87.5" Stretch="Fill" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="43.75">
			<Path.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Path.Fill>
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
		<Path Data="M259.5,359 L310.25,411" Height="55" Margin="258.5,0,261.75,90" Stretch="Fill" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Bottom">
			<Path.Fill>
				<SolidColorBrush Color="{StaticResource NodeFill}"/>
			</Path.Fill>
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
		<ed:RegularPolygon x:Name="WriteData" HorizontalAlignment="Right" Height="33.667" InnerRadius="0.47211" Margin="0,0,159.999,196.333" PointCount="5" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="33.667" Opacity="0">
			<ed:RegularPolygon.Fill>
				<SolidColorBrush Color="{StaticResource DataFill}"/>
			</ed:RegularPolygon.Fill>
			<ed:RegularPolygon.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</ed:RegularPolygon.Stroke>
		</ed:RegularPolygon>
		<local:FlowLine x:Name="flowLine1" HorizontalAlignment="Right" Height="69.835" Margin="0,0,188.374,167.235" VerticalAlignment="Bottom" Width="18" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto" Opacity="0">
			<local:FlowLine.RenderTransform>
				<CompositeTransform ScaleX="0.6" ScaleY="0.6" Rotation="161.285"/>
			</local:FlowLine.RenderTransform>
		</local:FlowLine>
		<ed:RegularPolygon x:Name="WriteData_Copy" Height="33.667" InnerRadius="0.47211" Margin="231.333,0,0,193" PointCount="5" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="33.667" Opacity="0">
			<ed:RegularPolygon.Fill>
				<SolidColorBrush Color="{StaticResource DataFill}"/>
			</ed:RegularPolygon.Fill>
			<ed:RegularPolygon.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</ed:RegularPolygon.Stroke>
		</ed:RegularPolygon>
		<local:FlowLine x:Name="flowLine" HorizontalAlignment="Left" Height="69.835" Margin="258.245,0,0,168.208" VerticalAlignment="Bottom" Width="18.21" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto" Opacity="0">
			<local:FlowLine.RenderTransform>
				<CompositeTransform ScaleX="0.6" ScaleY="0.6" Rotation="25.185"/>
			</local:FlowLine.RenderTransform>
		</local:FlowLine>
		<local:FlowLine x:Name="flowLine2" HorizontalAlignment="Right" Height="69.835" Margin="0,0,194.878,164.541" VerticalAlignment="Bottom" Width="18.21" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto" Opacity="0">
			<local:FlowLine.RenderTransform>
				<CompositeTransform ScaleX="0.6" ScaleY="0.6" Rotation="-19.94"/>
			</local:FlowLine.RenderTransform>
		</local:FlowLine>
		<Path x:Name="path" Data="M323.33334,311 C323.6131,315.54605 323.7554,317.5108 325.66666,321.33334 C327.73956,325.4791 327.65701,327.12396 324,332 C316.56644,341.91141 303.26489,345.64682 296,355.33334 C293.99316,358.00909 292.57172,359.71515 294,364 C295.0723,367.21686 299.76428,368.17502 300.66666,371.33334 C302.45309,377.58588 284.27646,377.72354 279,383 C271.06454,390.93546 264.4418,394.65088 266.66666,408 C267.41293,412.47757 281.16028,421.6456 271,426 C262.18234,429.77899 248.73164,425.60168 241.33333,433 C234.64577,439.68756 238.06238,445.11469 240.33333,455" Height="146" Margin="236.416,0,245.967,47" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" VerticalAlignment="Bottom" Opacity="0">
			<Path.Stroke>
				<SolidColorBrush Color="{StaticResource NodeStroke}"/>
			</Path.Stroke>
		</Path>
	</Grid>
</UserControl>